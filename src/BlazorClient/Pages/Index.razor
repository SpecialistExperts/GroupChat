@page "/"
@using GroupChat.ClientCore.Interfaces;
@using Radzen.Blazor;
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject IRpcServiceProvider  rpcServices;
@inject ICurrentUserService  currentUserServie;

@*@code {        

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var name = user.Identity.Name;
            System.Diagnostics.Debug.WriteLine($"{user.Identity.Name} is authenticated.");
        }
        else
        {
            System.Diagnostics.Debug.WriteLine("The user is NOT authenticated.");
        }

        try
        {
            var userService = await rpcServices.GetUserServiceAsync();
            var foo = await userService.Register("michael2", "m@m.com", "passowrd");
            
            Console.WriteLine();
        }
        catch (Exception ex)
        {

            throw;
        }
    }
}*@
